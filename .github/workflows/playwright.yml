name: Playwright Tests
on:
  push:
    branches: [ main, dev ]
    paths:
      - ".github/workflows/playwright.yml"
      - "Dockerfile"
      - "docker-compose.dev.yml"
      - "docker-compose.test.yml"
      - "e2e/*"
      - 'package.json'
      - 'package-lock.json'
      - 'prisma/**'
      - 'public/**'
      - 'tailwind.config.js'
      - 'tsconfig.json'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.css'
  pull_request:
    branches: [ main, dev ]
    paths:
      - ".github/workflows/playwright.yml"
      - "Dockerfile"
      - "docker-compose.dev.yml"
      - "docker-compose.test.yml"
      - "e2e/*"
      - 'package.json'
      - 'package-lock.json'
      - 'prisma/**'
      - 'public/**'
      - 'tailwind.config.js'
      - 'tsconfig.json'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.css'
jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Create .env
      run: cp .env.example .env && cp .env.example e2e/.env
      working-directory: ./
    - name: Docker Compose Up
      run: docker compose -f docker-compose.test.yml --env-file .env up -d
      working-directory: ./
    - name: Change directory and install dependencies
      run: npm ci
      working-directory: e2e
    # - name: Docker Compose Up NextJS
    #   run: docker compose -f docker-compose.test.yml --env-file .env up next-mokuro-bookshelf -d
    #   working-directory: ./
    - name: Install Playwright Browsers
      run:  npx playwright install --with-deps
      working-directory: e2e
    - name: Run Playwright tests
      run: npx playwright test
      working-directory: e2e
    # - uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: playwright-report
    #     path: playwright-report/
    #     retention-days: 30
