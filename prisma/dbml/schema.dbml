//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  name String [unique, not null]
  role Role [not null, default: 'READER']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  requirePasswordReset Boolean [not null, default: false]
  readings Reading [not null]
  uploadedVolumes Volume [not null]
  uploadedPages Page [not null]
  uploadedSeries Series [not null]
  auth_session Session [not null]
  key Key [not null]
  userSetting UserSetting
}

Table Session {
  id String [pk]
  user_id String [not null]
  active_expires BigInt [not null]
  idle_expires BigInt [not null]
  user User [not null]
}

Table Key {
  id String [pk]
  hashed_password String
  user_id String [not null]
  user User [not null]
}

Table Series {
  id Int [pk, increment]
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uploadedBy User [not null]
  uploadedById String [not null]
  volumes Volume [not null]
}

Table Volume {
  id Int [pk, increment]
  number Int [not null]
  series Series [not null]
  seriesId Int [not null]
  cover String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uploadedBy User [not null]
  uploadedById String [not null]
  readings Reading [not null]
  pages Page [not null]
  firstPageIsCover Boolean [not null, default: false]

  indexes {
    (number, seriesId) [unique]
  }
}

Table Page {
  id Int [pk, increment]
  number Int [not null]
  volume Volume [not null]
  volumeId Int [not null]
  ocr Json [not null]
  fileName String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  uploadedBy User [not null]
  uploadedById String [not null]

  indexes {
    (number, volumeId) [unique]
  }
}

Table Reading {
  id Int [pk, increment]
  user User [not null]
  userId String [not null]
  volume Volume [not null]
  volumeId Int [not null]
  page Int [not null, default: 0]
  status ReadingStatus [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  useTwoPagesOverride Boolean
  firstPageIsCoverOverride Boolean

  indexes {
    (userId, volumeId) [unique]
  }
}

Table UserSetting {
  id Int [pk, increment]
  user User [not null]
  userId String [unique, not null]
  useTwoPages Boolean [not null, default: false]
}

Enum Role {
  ADMIN
  EDITOR
  READER
}

Enum ReadingStatus {
  UNREAD
  READING
  READ
}

Ref: Session.user_id > User.id [delete: Cascade]

Ref: Key.user_id > User.id [delete: Cascade]

Ref: Series.uploadedById > User.id

Ref: Volume.seriesId > Series.id

Ref: Volume.uploadedById > User.id

Ref: Page.volumeId > Volume.id

Ref: Page.uploadedById > User.id

Ref: Reading.userId > User.id

Ref: Reading.volumeId > Volume.id

Ref: UserSetting.userId - User.id